if(!_global.com)
{
   _global.com=new Object();
}
if(!_global.com.jeroenwijering)
{
   _global.com.jeroenwijering=new Object();
}
if(!_global.com.jeroenwijering.players)
{
   _global.com.jeroenwijering.players=new Object();
}
if(!_global.com.jeroenwijering.players.ControlbarView)
{
   register1=function(ctr, cfg, fed)
   {
      super(ctr,cfg,fed);
      this.setColorsClicks();
      this.setDimensions();
      Stage.addListener(this);
      this.feeder.addListener(this);
      Mouse.addListener(this);
   };
   com.jeroenwijering.players.ControlbarView=function(ctr, cfg, fed)
   {
      super(ctr,cfg,fed);
      this.setColorsClicks();
      this.setDimensions();
      Stage.addListener(this);
      this.feeder.addListener(this);
      Mouse.addListener(this);
   };
   com.jeroenwijering.players.ControlbarView extends com.jeroenwijering.players.AbstractView
   register2=register1.prototype;
   _global.com.jeroenwijering.players.ControlbarView implements _global.com.jeroenwijering.feeds.FeedListener
   register2.setColorsClicks=function()
   {
      var ref=this
      register2=this.config.clip.controlbar;
      register2.col=new Color(register2.back);
      register2.col.setRGB(this.config.backcolor);
      register2.playpause.col1=new Color(register2.playpause.ply);
      register2.playpause.col1.setRGB(this.config.frontcolor);
      register2.playpause.col2=new Color(register2.playpause.pas);
      register2.playpause.col2.setRGB(this.config.frontcolor);
      register2.playpause.onRollOver=function()
      {
            this.col1.setRGB(ref.config.lightcolor);
            this.col2.setRGB(ref.config.lightcolor);
      };
      register2.playpause.onRollOut=function()
      {
            this.col1.setRGB(ref.config.frontcolor);
            this.col2.setRGB(ref.config.frontcolor);
      };
      register2.playpause.onRelease=function()
      {
            ref.sendEvent("playpause");
      };
      register2.stop.col=new Color(register2.stop.icn);
      register2.stop.col.setRGB(this.config.frontcolor);
      register2.stop.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
      };
      register2.stop.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
      };
      register2.stop.onRelease=function()
      {
            ref.sendEvent("stop");
      };
      register2.prev.col=new Color(register2.prev.icn);
      register2.prev.col.setRGB(this.config.frontcolor);
      register2.prev.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
      };
      register2.prev.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
      };
      register2.prev.onRelease=function()
      {
            ref.sendEvent("prev");
      };
      register2.next.col=new Color(register2.next.icn);
      register2.next.col.setRGB(this.config.frontcolor);
      register2.next.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
      };
      register2.next.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
      };
      register2.next.onRelease=function()
      {
            ref.sendEvent("next");
      };
      register2.scrub.elpTxt.textColor=this.config.frontcolor;
      register2.scrub.remTxt.textColor=this.config.frontcolor;
      register2.scrub.col=new Color(register2.scrub.icn);
      register2.scrub.col.setRGB(this.config.frontcolor);
      register2.scrub.col2=new Color(register2.scrub.bar);
      register2.scrub.col2.setRGB(this.config.frontcolor);
      register2.scrub.col3=new Color(register2.scrub.bck);
      register2.scrub.col3.setRGB(this.config.frontcolor);
      register2.scrub.bck.onRollOver=function()
      {
            this._parent.col.setRGB(ref.config.lightcolor);
      };
      register2.scrub.bck.onRollOut=function()
      {
            this._parent.col.setRGB(ref.config.frontcolor);
      };
      register2.scrub.bck.onPress=function()
      {
            this.onEnterFrame=function()
            {
                  register2=this._parent._xmouse;
                  if(register2<this._parent.bck._width+this._parent.bck._x&&register2>this._parent.bck._x)
                  {
                        this._parent.icn._x=this._parent._xmouse-1;
                  }
            };
      };
      register0=function()
      {
            register2=(this._parent._xmouse-this._parent.bar._x)/ref.barWidths*ref.itemLength;
            ref.sendEvent("scrub",Math.round(register2));
            delete this.onEnterFrame
      };
      register2.scrub.bck.onReleaseOutside=function()
      {
            register2=(this._parent._xmouse-this._parent.bar._x)/ref.barWidths*ref.itemLength;
            ref.sendEvent("scrub",Math.round(register2));
            delete this.onEnterFrame
      };
      register2.scrub.bck.onRelease=register0;
      register2.scrub.bck.tabEnabled=false;
      register2.fs.col1=new Color(register2.fs.ns);
      register2.fs.col2=new Color(register2.fs.fs);
      register2.fs.col.setRGB(ref.config.frontcolor);
      register2.fs.col2.setRGB(ref.config.frontcolor);
      register2.fs.onRollOver=function()
      {
            this.col1.setRGB(ref.config.lightcolor);
            this.col2.setRGB(ref.config.lightcolor);
      };
      register2.fs.onRollOut=function()
      {
            this.col1.setRGB(ref.config.frontcolor);
            this.col2.setRGB(ref.config.frontcolor);
      };
      register2.fs.onRelease=function()
      {
            ref.sendEvent("fullscreen");
            this.col1.setRGB(ref.config.frontcolor);
            this.col2.setRGB(ref.config.frontcolor);
      };
      register2.cc.col=new Color(register2.cc.icn);
      register2.cc.col.setRGB(ref.config.frontcolor);
      register2.cc.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
      };
      register2.cc.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
      };
      register2.cc.onRelease=function()
      {
            ref.sendEvent("captions");
      };
      register2.au.col=new Color(register2.au.icn);
      register2.au.col.setRGB(ref.config.frontcolor);
      register2.au.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
      };
      register2.au.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
      };
      register2.au.onRelease=function()
      {
            ref.sendEvent("audio");
      };
      register2.dl.col=new Color(register2.dl.icn);
      register2.dl.col.setRGB(ref.config.frontcolor);
      register2.dl.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
      };
      register2.dl.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
      };
      register2.dl.onRelease=function()
      {
            ref.sendEvent("getlink",ref.currentItem);
      };
      register2.vol.col=new Color(register2.vol.bar);
      register2.vol.col.setRGB(this.config.frontcolor);
      register2.vol.col2=new Color(register2.vol.bck);
      register2.vol.col2.setRGB(this.config.frontcolor);
      register2.vol.col3=new Color(register2.vol.icn);
      register2.vol.col3.setRGB(this.config.frontcolor);
      register2.vol.onRollOver=function()
      {
            this.col.setRGB(ref.config.lightcolor);
            this.col3.setRGB(ref.config.lightcolor);
      };
      register2.vol.onRollOut=function()
      {
            this.col.setRGB(ref.config.frontcolor);
            this.col3.setRGB(ref.config.frontcolor);
      };
      register2.vol.onRelease=function()
      {
            this.onEnterFrame=function()
            {
                  this.msk._width=this._xmouse-12;
            };
      };
      register0=function()
      {
            ref.sendEvent("volume",(this._xmouse-12)*5);
            delete this.onEnterFrame
      };
      register2.vol.onReleaseOutside=function()
      {
            ref.sendEvent("volume",(this._xmouse-12)*5);
            delete this.onEnterFrame
      };
      register2.vol.onRelease=register0;
   };
   register2.setDimensions=function()
   {
      clearInterval(this.hideInt);
      register2=this.config.clip.controlbar;
      register4=400;
      if(Stage.displayState=="fullScreen")
      {
            register2._x=Math.round(Stage.width/2-200);
            register2._y=Stage.height-40;
            register2._alpha=100;
            register2.back._alpha=50;
            register2.fs.fs._visible=false;
            register2.fs.ns._visible=true;
      }
      else
      {
            if(this.config.displayheight==this.config.height)
            {
               register2._y=this.config.displayheight-40;
               if(this.config.displaywidth>450&&this.config.displaywidth==this.config.width)
               {
                  register2._x=Math.round(Stage.width/2-200);
               }
               else
               {
                  register2._x=20;
                  register4=this.config.displaywidth-40;
               }
               register2.back._alpha=40;
               register2.fs.fs._visible=true;
               register2.fs.ns._visible=false;
            }
            else
            {
               register2._x=0;
               register2._y=this.config.displayheight;
               register4=this.config.width;
               register2._alpha=100;
               register2.back._alpha=100;
               register2.fs.fs._visible=true;
               register2.fs.ns._visible=false;
            }
      }
      if(this.config.largecontrols=="true")
      {
            register0=200;
            register2._yscale=200;
            register2._xscale=register0;
            if(Stage.displayState=="fullScreen")
            {
               register2._y=Stage.height-60;
               register4=300;
               register2._x=Math.round(Stage.width/2-300);
            }
            else
            {
               register4=register4/2;
            }
      }
      register2.back._width=register4;
      if(this.config.displayheight<this.config.height-40||this.config.displaywidth<this.config.width-40||register4<200||this.feeder.feed.length<2)
      {
            register0=false;
            register2.next._visible=false;
            register2.prev._visible=register0;
            register2.scrub.shd._width=register4-17;
            register2.scrub._x=17;
      }
      else
      {
            register0=true;
            register2.next._visible=true;
            register2.prev._visible=register0;
            register2.scrub.shd._width=register4-51;
            register2.scrub._x=51;
      }
      if(this.config.showstop=="true")
      {
            register2.scrub.shd._width=register2.scrub.shd._width-17;
            register2.scrub._x=register2.scrub._x+17;
      }
      else
      {
            register2.stop._visible=false;
            register2.prev._x=17;
            register2.next._x=34;
      }
      register3=register4;
      if(register4>50)
      {
            register3=register3-37;
            register2.scrub.shd._width=register2.scrub.shd._width-37;
            register2.vol._x=register3;
      }
      else
      {
            register3=register3-1;
            register2.scrub.shd._width=register2.scrub.shd._width-1;
            register2.vol._x=register3;
      }
      if(this.feeder.audio==true)
      {
            register3=register3-17;
            register2.scrub.shd._width=register2.scrub.shd._width-17;
            register2.au._x=register3;
            register2.au._visible=true;
      }
      else
      {
            register2.au._visible=false;
      }
      if(this.feeder.captions==true)
      {
            register3=register3-17;
            register2.scrub.shd._width=register2.scrub.shd._width-17;
            register2.cc._x=register3;
            register2.cc._visible=true;
      }
      else
      {
            register2.cc._visible=false;
      }
      if(this.config.showdownload=="true")
      {
            register3=register3-17;
            register2.scrub.shd._width=register2.scrub.shd._width-17;
            register2.dl._x=register3;
      }
      else
      {
            register2.dl._visible=false;
      }
      if((Stage.displayState==undefined||this.config.usefullscreen=="false"||this.feeder.onlymp3s==true)&&this.config.fsbuttonlink==undefined)
      {
            register2.fs._visible=false;
      }
      else
      {
            register3=register3-18;
            register2.scrub.shd._width=register2.scrub.shd._width-18;
            register2.fs._x=register3;
      }
      if(this.config.showdigits=="false"||register2.scrub.shd._width<120||System.capabilities.version.indexOf("7,0,")>-1)
      {
            register0=false;
            register2.scrub.remTxt._visible=false;
            register2.scrub.elpTxt._visible=register0;
            register0=5;
            register2.scrub.icn._x=5;
            register0=register0;
            register2.scrub.bck._x=register0;
            register2.scrub.bar._x=register0;
            register0=register2.scrub.shd._width-10;
            register2.scrub.bck._width=register2.scrub.shd._width-10;
            this.barWidths=register0;
      }
      else
      {
            register0=true;
            register2.scrub.remTxt._visible=true;
            register2.scrub.elpTxt._visible=register0;
            register0=42;
            register2.scrub.icn._x=42;
            register0=register0;
            register2.scrub.bck._x=register0;
            register2.scrub.bar._x=register0;
            register0=register2.scrub.shd._width-84;
            register2.scrub.bck._width=register2.scrub.shd._width-84;
            this.barWidths=register0;
            register2.scrub.remTxt._x=register2.scrub.shd._width-39;
      }
      register2.scrub.bar._width=0;
   };
   register2.setState=function(stt)
   {
      register2=this.config.clip.controlbar.playpause;
      switch(stt)
      {
            case 0:
               register2.ply._visible=true;
               register2.pas._visible=false;
               break;
            case 1:
               register2.pas._visible=true;
               register2.ply._visible=false;
               break;
            case 2:
               register2.pas._visible=true;
               register2.ply._visible=false;
               break;
      }
   };
   register2.setTime=function(elp, rem)
   {
      this.itemLength=elp+rem;
      this.itemProgress=Math.round(rem/this.itemLength*100);
      register2=this.config.clip.controlbar.scrub;
      register5=Math.floor(elp/(elp+rem)*this.barWidths)-2;
      if(rem>0)
      {
            register2.icn._visible=true;
            register2.bar._visible=true;
            if(!(elp==0||register5<2))
            {
               register0=register5-2;
               register2.bar._width=register5-2;
            }
            else
            {
               register0=0;
               register2.bar._width=0;
            }
            register2.icn._x=register2.bar._width+register2.bar._x+1;
      }
      else
      {
            register2.icn._visible=false;
            register2.bar._visible=false;
      }
      register2.elpTxt.text=com.jeroenwijering.utils.StringMagic.addLeading(elp/60)+":"+com.jeroenwijering.utils.StringMagic.addLeading(elp%60);
      if(register2.bck._width==this.barWidths)
      {
            if(this.config.showdigits=="total")
            {
               register2.remTxt.text=com.jeroenwijering.utils.StringMagic.addLeading((elp+rem)/60)+":"+com.jeroenwijering.utils.StringMagic.addLeading((elp+rem)%60);
            }
            else
            {
               register2.remTxt.text=com.jeroenwijering.utils.StringMagic.addLeading(rem/60)+":"+com.jeroenwijering.utils.StringMagic.addLeading(rem%60);
            }
      }
   };
   register2.setItem=function(prm)
   {
      this.wasLoaded=false;
      this.currentItem=prm;
      this.config.clip.controlbar.scrub.icn._alpha=100;
   };
   register2.setLoad=function(pct)
   {
      register2=this.config.clip.controlbar.scrub;
      if(this.wasLoaded==false)
      {
            register2.bck._width=Math.round(this.barWidths*pct/100);
      }
      register2.remTxt.text=Math.round(pct)+" %";
      !(pct==100)?null:register0;
   };
   register2.setVolume=function(pr1)
   {
      register2=this.config.clip.controlbar.vol;
      register2.msk._width=Math.round(pr1/5);
      if(pr1==0)
      {
            register2.icn._alpha=40;
      }
      else
      {
            register2.icn._alpha=100;
      }
   };
   register2.onResize=function()
   {
      if(this.config.displayheight>this.config.height+10)
      {
            register0=Stage.height;
            this.config.displayheight=Stage.height;
            this.config.height=register0;
            register0=Stage.width;
            this.config.displaywidth=Stage.width;
            this.config.width=register0;
      }
      this.setDimensions();
   };
   register2.onFullScreen=function(fs)
   {
      if(fs==false)
      {
            this.setDimensions();
            com.jeroenwijering.utils.Animations.fadeIn(this.config.clip.controlbar);
      }
      else
      {
            this.hideInt=setInterval(this,"hideBar",500);
      }
   };
   register2.hideBar=function()
   {
      com.jeroenwijering.utils.Animations.fadeOut(this.config.clip.controlbar);
      clearInterval(this.hideInt);
   };
   register2.onMouseMove=function()
   {
      if(this.config.displayheight==this.config.height||Stage.displayState=="fullScreen")
      {
            com.jeroenwijering.utils.Animations.fadeIn(this.config.clip.controlbar);
            clearInterval(this.hideInt);
            if(!this.config.clip.controlbar.hitTest(_root._xmouse,_root._ymouse))
            {
               this.hideInt=setInterval(this,"hideBar",500);
            }
      }
   };
   register2.onFeedUpdate=function(typ)
   {
      this.setDimensions();
   };
   register2.itemProgress=0;
   register2.wasLoaded=false;
}
